@page "/manageSecret"

@inject IJSRuntime JS
@inject TorizonService TorizonService
@inject SweetAlertService Swal
@inject FilterService FilterService

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<PageTitle>Definições</PageTitle>

<h2 class="pb-5">Definições</h2>

<div class="row mb-3">
    <div class="col-auto">
        <label for="refreshTime" class="fw-bold fs-5">
            Tempo de atualização de dados (máx. 60 seg.)
        </label>
        <input id="refreshTime" @bind="refreshTime" type="number" min="10" max="60" class="form-control mt-2" />
    </div>
</div>

<div class="text-center fixed-bottom pb-5">
    <button type="submit" class="btn btn-color" style="margin-left: 20vw; width: 20vw; font-size: 1.5rem;" @onclick=ConfirmAndSubmit>Alterar</button>
</div>

@code {
    private int refreshTime = 10;

    protected override async Task OnInitializedAsync()
    {
        await FilterService.LoadFilterAsync();

        refreshTime = FilterService.RefreshTime;
    }

    private async Task ConfirmAndSubmit()
    {
        if (refreshTime < 10 || refreshTime > 60)
        {
            await Swal.FireAsync(new SweetAlertOptions
            {
                Title = "Por favor coloque um valor entre 10 a 60 segundos!",
                Icon = SweetAlertIcon.Warning,
                ConfirmButtonColor = "#0B5120"
            });
            return;
        }

        await FilterService.ApplyTimeFilter(refreshTime);

        await Swal.FireAsync(new SweetAlertOptions
        {
            Title = "Filtros aplicados com sucesso!",
            Icon = SweetAlertIcon.Success,
            ConfirmButtonColor = "#0B5120"
        });
    }
}
