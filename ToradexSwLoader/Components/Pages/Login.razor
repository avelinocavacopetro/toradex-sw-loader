@page "/"

@using System.ComponentModel.DataAnnotations
@using ToradexSwLoader.Data
@using ToradexSwLoader.Models
@using ToradexSwLoader.Services
@inject NavigationManager UriHelper
@inject AppDbContext DbContext
@inject LoginService LoginService

<PageTitle>Log in</PageTitle>

<br />
<br />
<br />
<br />

<div class="d-flex justify-content-center align-items-center">
    <img class="" style="height: 25vh;" src="images/PetrotecGroup_01.jpg" />
</div>

<br />
<br />
<br />
<br />

<div class="d-flex justify-content-center full-height pb-2">
    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="alert alert-danger alert-dismissible fade show w-25" role="alert">
            @errorMessage
            <button type="button" class="btn-close" aria-label="Close" @onclick="() => errorMessage = null"></button>
        </div>
    }
</div>


<div class="d-flex justify-content-center align-items-center full-height">
    <div class="col-md-4">
        <section>
            <div class="form-floating mb-3">
                <input type="email" class="form-control custom-input" @bind="inputEmail" autocomplete="username" aria-required="true" placeholder="name@example.com" />
                <label for="email" class="form-label">Email</label>
            </div>
            <div class="form-floating mb-3">
                <input type="password" class="form-control custom-input" autocomplete="current-password" aria-required="true" placeholder="password" />
                <label for="password" class="form-label">Password</label>
            </div>
            <br />
            <div>
                <a class="w-100 btn btn-custom btn-lg btn-primary" @onclick="RegisterLogin">Log in</a>
            </div>
        </section>
    </div>
</div>

<style>

    .btn-custom{
        background-color: #0B5120;
        color: white;
    }

    .btn-custom:hover {
            background-color: #073816;
        color: white;
    }
</style>

@code {
    private string inputEmail = string.Empty;
    private bool isLoading = true;
    private string errorMessage = string.Empty;


    private async Task RegisterLogin()
    {
        @if (!string.IsNullOrWhiteSpace(inputEmail))
        {
            if (inputEmail.Contains("petrotec.com"))
            {
                

                var loginLog = new LoginLog
            {
                Email = inputEmail,
                LoginTimeStamp = DateTime.Now
            };

                DbContext.LoginLogs.Add(loginLog);
                await DbContext.SaveChangesAsync();

                LoginService.SetLogin(loginLog.LoginId, loginLog.Email);

                isLoading = false;

                EnterLogin();

            } else
            {
                errorMessage = "O email inserido não é petrotec.com";
            }
        }
        else
        {
            errorMessage = "O email inserido está vazio";
        }
    }

    private void EnterLogin()
    {
        if (!isLoading)
        {
            UriHelper.NavigateTo($"/home");
        }
    }
}