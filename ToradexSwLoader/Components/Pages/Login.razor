@page "/"

@inject IDbContextFactory<AppDbContext> DbContextFactory
@inject NavigationManager UriHelper
@inject LoginService LoginService

<PageTitle>Log in</PageTitle>

<div class="d-flex flex-column min-vh-100">
    <div class="mx-auto position-relative title-container text-white pt-5">
        <h1 class="text-center">Toradex SW Loader</h1>
        <div class="secondary-title position-absolute pb-5" style="opacity:0.8;">
            <span style="font-size:17px;">Powered by</span>
            <img style="height:4vh;" src="images/linepetroteclogo.png" />
        </div>
    </div>

    <main class="flex-grow-1">
        <div class="d-flex justify-content-center pb-5">
            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <div class="alert alert-danger alert-dismissible fade show w-25" role="alert">
                    @errorMessage
                    <button type="button" class="btn-close" aria-label="Close" @onclick="() => errorMessage = null"></button>
                </div>
            }
        </div>

        <div class="center-login pt-5">
            <div class="login-box position-relative shadow">
                <div class="user-icon bg-white border shadow-sm">
                    <i class="bi bi-person-fill"></i>
                </div>

                <section class="mt-5">
                    <div class="form-floating mb-3 position-relative">
                        <input type="email" class="form-control pe-5" @bind="inputEmail" autocomplete="username" aria-required="true" placeholder="name@example.com" id="email" />
                        <label for="email" class="form-label">Utilizador</label>
                        <i class="bi bi-person-fill position-absolute top-50 end-0 translate-middle-y me-3"></i>
                    </div>

                    <div class="form-floating mb-3 position-relative">
                        <input type="password" class="form-control pe-5" @bind="inputPassword" autocomplete="current-password" aria-required="true" placeholder="password" id="password" />
                        <label for="password" class="form-label">Palavra-passe</label>
                        <i class="bi bi-lock-fill position-absolute top-50 end-0 translate-middle-y me-3"></i>
                    </div>
                    <br />
                    <div>
                        <a class="w-100 btn btn-custom btn-lg btn-primary" @onclick="RegisterLogin">Entrar</a>
                    </div>
                </section>
            </div>
        </div>
    </main>

    <footer class="text-center pb-4">
        <div class="d-flex justify-content-between align-items-center w-100 px-4" style="color:white;">
            <span class="text-start" style="font-size: 15px; opacity:0.5;">v 2.0.0</span>
            <span style="font-size: 15px; opacity:0.5;">&copy; 2025 Petrotec</span>
            <a class="text-end" href="https://www.petrotec.com/" target="_blank">
                <img class="footer-logo" style="opacity:0.5;" src="images/petrotec_logo_white.png" />
            </a>
        </div>
    </footer>
</div>

<style>
    html, body {
    height: 100%;
    margin: 0;
    padding: 0;
    overflow: hidden;
}

    .title-container {
        text-align: center;
        margin-bottom: 2rem;
        position: relative;
    }

    .secondary-title {
    right: 0;
    top: 100%;
    transform: translateX(5%);
    display: flex;
    align-items: center;
    justify-content: flex-end;
    position: absolute;
}

    .footer-logo {
        height: 7vh;
        object-fit: contain;
    }

    .secondary-title img{
        filter: brightness(0) invert(1);
    }

    body {
        background-image: url("images/image-background-green.png");
        background-size:cover;
    }

    .login-box {
        background-color: #ffffff;
        padding: 4rem 2rem 3rem 2rem;
        border-radius: 10px;
        width: 100%;
        max-width: 400px;
        position: relative;
    }

    .user-icon {
        position: absolute;
        top: -40px;
        left: 50%;
        transform: translateX(-50%);
        width: 120px;
        height: 120px;
        border-radius: 50%;
        border-color: #0B5120 !important;
        background-color: #0B5120 !important;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 6.5rem;
        color: #ffffff;
    }

    .btn-custom {
        background-color: #0B5120;
        color: white;
    }

        .btn-custom:hover {
            background-color: #073816;
            color: white;
        }
</style>

@code {
    private string inputEmail = string.Empty;
    private string inputPassword = string.Empty;
    private string? errorMessage = string.Empty;

    private bool isLoading = true;

    private async Task RegisterLogin()
    {
        if (string.IsNullOrWhiteSpace(inputEmail))
        {
            errorMessage = "O campo Email não pode estar vazio";
            return;
        }

        if (string.IsNullOrWhiteSpace(inputPassword))
        {
            errorMessage = "O campo Password não pode estar vazio";
            return;
        }

        if (!inputEmail.EndsWith("@petrotec.com"))
        {
            errorMessage = "O email inserido não é petrotec.com";
            return;
        }

        using var context = DbContextFactory.CreateDbContext();
        var user = await context.Users.FirstOrDefaultAsync(u => u.Email == inputEmail);

        if (user == null)
        {
            errorMessage = "Email ou password inválidos";
            return;
        }

        var loginLog = new LoginLog
        {
            UserId = user.Id,
            Email = inputEmail,
            LoginTimeStamp = DateTime.Now
        };

        context.LoginLogs.Add(loginLog);
        await context.SaveChangesAsync();

        LoginService.SetLogin(user.Id, user.UserName);

        isLoading = false;

        EnterLogin();
    }

    private void EnterLogin()
    {
        if (!isLoading)
        {
            UriHelper.NavigateTo($"/home");
        }
    }
}