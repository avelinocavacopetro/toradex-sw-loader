@page "/selectFleet/{selectedDeviceName}/{selectedPackageName}"

@using ToradexSwLoader.Data
@using ToradexSwLoader.Models
@using ToradexSwLoader.Services
@using Microsoft.EntityFrameworkCore
@rendermode InteractiveServer
@inject IDbContextFactory<AppDbContext> DbContextFactory
@inject TorizonService TorizonService
@inject FleetService FleetService
@inject NavigationManager UriHelper
@inject IJSRuntime JS
@inject SweetAlertService Swal

<PageTitle>Selecionar Frota</PageTitle>

@if (isLoading)
{
    <div class="center">
        <div class="text-center mt-5">
            <div class="spinner-border text-success" role="status" style="width: 3rem; height: 3rem;">
                <span class="visually-hidden">A carregar...</span>
            </div>
            <p class="mt-3">A carregar...</p>
        </div>
    </div>
}
else
{
    <a href="#"
       onclick="if (@(isLoading.ToString().ToLower())) { event.preventDefault(); } else { history.back(); }"
       class="text-black"
       style="cursor: @(isLoading ? "default" : "pointer");">
        <i class="bi bi-arrow-left fs-1"></i>
    </a>

    <h3 class="text-center pb-5">Selecionar Frota</h3>
    <br />
    <br />

    <div class="grid-container">
        @foreach (var fleet in fleets)
        {
            <div class="grid-item" @onclick="() => SelectFleetName(fleet)">@fleet.FleetName</div>
        }
    </div>
}


<style>
    .grid-container {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        gap: 25px;
        padding: 10px;
    }

    .grid-item {
        background-color: #0c6527;
        color: white;
        text-align: center;
        padding: 30px 15px;
        font-size: 22px;
        border-radius: 5px;
    }

    .center {
        display: flex;
        justify-content: center;
        align-items: center;
        text-align: center;
        min-height: 80vh;
    }

</style>

@code {
    [Parameter]
    public string selectedDeviceName { get; set; }

    [Parameter]
    public string selectedPackageName { get; set; }
    private List<Fleet> fleets = new List<Fleet>();
    private Fleet? selectedFleet;
    private string selectedFleetName;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        using var context = DbContextFactory.CreateDbContext();
        fleets = await context.Fleets.ToListAsync();

        StateHasChanged();

        var importTask = Task.Run(async () =>
        {
            var fleetUrl = "https://app.torizon.io/api/v2beta/fleets";
            bool imported = await FleetService.ImportFleetsFromApiAsync(fleetUrl);
            return imported;
        });

        bool importResult = await importTask;

        if (importResult)
        {
            using var newContext = DbContextFactory.CreateDbContext();
            fleets = await newContext.Fleets.ToListAsync();
            StateHasChanged();
        }

        isLoading = false;
    }

    private void SelectFleetName(Fleet fleet)
    {
        selectedFleet = fleet;
        selectedFleetName = fleet.FleetName;
        UriHelper.NavigateTo($"/customization/{Uri.EscapeDataString(selectedDeviceName)}/{Uri.EscapeDataString(selectedPackageName)}/{Uri.EscapeDataString(selectedFleetName)}");
    }

    private async Task OnClick()
    {
        if (selectedFleet != null)
        {
            // var userAct = new UserActivity
            // {
            //     ActMessage = $"Colaborador selecionou o software -> Id: {selectedFleet.PackageId} | Nome: {selectedFleet.PackageName}",
            //     ActTimeStamp = DateTime.Now
            // };

            // DbContext.UserActivities.Add(userAct);
            // await DbContext.SaveChangesAsync();

            UriHelper.NavigateTo($"/charging/{Uri.EscapeDataString(selectedDeviceName)}/{Uri.EscapeDataString(selectedPackageName)}/{Uri.EscapeDataString(selectedFleetName)}");
        }
        else
        {
            await JS.InvokeVoidAsync("Swal.fire", new
            {
                title = "Selecione uma frota!",
                icon = "warning",
                confirmButtonColor = "#0B5120"
            });
        }
    }
}

