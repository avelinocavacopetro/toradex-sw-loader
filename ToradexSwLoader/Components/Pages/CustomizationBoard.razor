@page "/customization/{deviceId}/{packageId}/{fleetId}"
@using ToradexSwLoader.Models
@using Microsoft.EntityFrameworkCore
@using ToradexSwLoader.Data
@inject NavigationManager UriHelper
@inject IDbContextFactory<AppDbContext> DbContextFactory

<PageTitle>Customizar Placa</PageTitle>

<a href="" onclick="history.back()" class="text-black">
        <i class="bi bi-arrow-left fs-1"></i>
    </a>

<h3 class="text-center py-4">Placa Final</h3>

@if (!isLoading)
{
    <h5 style="text-align: center;">Dispositivo: @selectedDevice?.DeviceName</h5>
    <h5 style="text-align: center;">Software: @selectedPackage?.PackageId</h5>
    <h5 style="text-align: center;">Frota: @selectedFleet?.FleetName</h5>
}

<div class="center-customization">
    @if (!isEditing)
    {
        <h4 class="custom-h4 text-center px-5">
            @finalBoard
            <span class="bi bi-pencil-square px-5" aria-hidden="true" style="cursor:pointer" @onclick="ChangeName"></span>
        </h4>

        <div class="text-center fixed-bottom pb-5">
            <a href="/home">
                <button class="btn btn-color btn-lg" style="width: 20vw; font-size: 1.5rem;">OK</button>
            </a>
        </div>

    }
    else
    {
        <div class="edit-form">
            <label for="text" class="pb-4" style="font-size: 1.5rem;">Alterar nome da placa</label>
            <input type="text" @bind="finalBoard" class="form-control w-100 mx-auto" style="font-size: 1.2rem; text-align: center;"/>
            <div>
                <button class="btn btn-color mt-5 btn-lg btn-edit-custom" @onclick="SaveName">Salvar</button>
                <button class="btn btn-danger mt-5 ms-5 btn-lg btn-edit-custom" @onclick="CancelEdit">Cancelar</button>

            </div>
            
        </div>
    }
</div>

@code {
    private bool isLoading = true;

    [Parameter]
    public string deviceId { get; set; } = string.Empty;
    private Device? selectedDevice = new Device();

    [Parameter]
    public string packageId { get; set; } = string.Empty;
    private Package? selectedPackage = new Package();

    [Parameter]
    public string fleetId { get; set; } = string.Empty;
    private Fleet? selectedFleet = new Fleet();

    long serial;

    private string finalBoard = string.Empty;

    private bool isEditing = false;

    private string originalFinalBoard = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        using var context = DbContextFactory.CreateDbContext();
        selectedDevice = await context.Devices.FirstOrDefaultAsync(d => d.DeviceId == deviceId);
        selectedPackage = await context.Packages.FirstOrDefaultAsync(p => p.PackageId == packageId);
        selectedFleet = await context.Fleets.FirstOrDefaultAsync(f => f.Id == fleetId);

        isLoading = false;
    }

    protected override void OnParametersSet()
    {
        if (string.IsNullOrEmpty(finalBoard) && selectedDevice != null && selectedPackage != null && selectedFleet != null)
        {
            finalBoard = $"{selectedDevice.DeviceName}_{selectedPackage.PackageVersion}_{selectedFleet.FleetName}";
        }
    }

    private void ChangeName()
    {
        originalFinalBoard = finalBoard;
        isEditing = true;
    }

    private void SaveName()
    {
        isEditing = false;
    }

    private void CancelEdit()
    {
        finalBoard = originalFinalBoard;
        isEditing = false;
    }
}