@page "/selectStack/{deviceId:int}/{productId:int}"

<PageTitle>Selecionar Stack</PageTitle>

@inject NavigationManager UriHelper
@inject IDbContextFactory<AppDbContext> DbContextFactory

<a href="#"
   onclick="if (@(isLoading.ToString().ToLower())) { event.preventDefault(); } else { history.back(); }"
   class="text-black"
   style="cursor: @(isLoading ? "default" : "pointer");">
    <i class="bi bi-arrow-left fs-1"></i>
</a>

<h3 class="mb-5 text-center">Selecionar Stack</h3> 

<h5>NÃO TEM NADA</h5>

<div class="text-center fixed-bottom pb-5">
    <button class="btn btn-color btn-lg" style="width: 20vw; font-size: 1.5rem;" @onclick="OnClick">Seguinte</button>
</div>
@code {
    [Parameter]
    public int deviceId { get; set; }
    private Device? selectedDevice = new Device();

    [Parameter]
    public int productId { get; set; }
    private Product? selectedProduct = new Product();

    private bool isLoading = false;

    protected override async Task OnInitializedAsync()
    {
        using var context = DbContextFactory.CreateDbContext();
        selectedDevice = await context.Devices.FirstOrDefaultAsync(d => d.DeviceId == deviceId);
        selectedProduct = await context.Products.FirstOrDefaultAsync(p => p.ProductId == productId);
        isLoading = false;
    }

    private void OnClick()
    {
        UriHelper.NavigateTo($"/packages/{deviceId}/{productId}");
    }
}
